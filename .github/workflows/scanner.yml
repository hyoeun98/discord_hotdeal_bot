name: Build and Push Docker Image for Lambda
on:
  push:
    branches:
      - main
    paths:
      - 'lambda-selenium-docker-scanner/**'
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Build and push Docker image for Lambda
        working-directory: ./lambda-selenium-docker-scanner
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: scanner
          IMAGE_TAG: latest
        run: |
          # 캐시 사용을 위한 Buildx 설정
          docker buildx create --use
          
          # AWS Lambda 호환 이미지 빌드 및 푸시
          docker buildx build \
            --platform=linux/amd64 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            --push \
            .
            
          # 캐시 관리
          rm -rf /tmp/.buildx-cache
          mkdir -p /tmp/.buildx-cache
          if [ -d "/tmp/.buildx-cache-new" ]; then
            mv /tmp/.buildx-cache-new/* /tmp/.buildx-cache/ || true
            rm -rf /tmp/.buildx-cache-new
          fi
      
      # Lambda 함수 업데이트 전에 이미지 디제스트 가져오기
      - name: Get image digest
        id: image-digest
        run: |
          DIGEST=$(aws ecr describe-images --repository-name scanner --image-ids imageTag=latest --query 'imageDetails[0].imageDigest' --output text)
          echo "DIGEST=$DIGEST" >> $GITHUB_ENV
          echo "Image Digest: $DIGEST"
      
      # Lambda 함수 업데이트
      - name: Update Lambda function with new ECR image
        env:
          LAMBDA_FUNCTION_NAME: scanner
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: scanner
        run: |
          aws lambda update-function-code \
            --function-name $LAMBDA_FUNCTION_NAME \
            --image-uri $ECR_REGISTRY/$ECR_REPOSITORY@$DIGEST \
            --region ap-northeast-2
