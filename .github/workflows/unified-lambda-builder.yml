name: Build and Push Docker Image for Lambda

on:
  push:
    branches:
      - main
    paths:
      - 'lambda-selenium-docker-scanner/**'
      - 'lambda-selenium-docker-crawler/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: scanner
            path: lambda-selenium-docker-scanner
            function_name: scanner
          - name: crawler
            path: lambda-selenium-docker-crawler
            function_name: crawler

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Restore Docker cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.name }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.name }}

      - name: Create persistent Buildx builder
        run: |
          docker buildx create --name lambda-builder-${{ matrix.name }} --use --bootstrap || echo "Builder already exists"

      - name: Build Docker image
        run: |
          docker buildx build             --builder lambda-builder-${{ matrix.name }}             --platform linux/amd64             --cache-from type=local,src=/tmp/.buildx-cache             --cache-to type=local,dest=/tmp/.buildx-cache             --output type=docker             -t ${{ matrix.name }}:build             ./${{ matrix.path }}

      - name: Tag Docker image
        run: |
          docker tag ${{ matrix.name }}:build ${{ steps.login-ecr.outputs.registry }}/${{ matrix.name }}:latest

      - name: Push Docker image
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ matrix.name }}:latest

      - name: Save Docker cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.name }}

      - name: Update Lambda function to use new image
        run: |
          aws lambda update-function-code             --function-name ${{ matrix.function_name }}             --image-uri ${{ steps.login-ecr.outputs.registry }}/${{ matrix.name }}:latest
